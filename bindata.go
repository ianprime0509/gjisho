// Code generated by go-bindata. DO NOT EDIT.
// sources:
// data/gjisho.glade
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataGjishoGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdd\x76\xe2\xb8\x96\xbe\xe7\x29\xf6\xf8\xe2\x4c\xd7\x1a\x7e\x52\x55\xa7\x7b\xba\xfb\x24\x9c\xe3\x80\x93\xb8\x0b\x4c\xc6\x38\x95\x93\x2b\x96\xb0\x05\xa8\x63\x2c\x8f\x24\x42\x71\xd6\xbc\xd0\xbc\xc6\x3c\xd9\x2c\xc9\x26\x81\x60\xe3\x1f\x48\x42\xaa\xa8\x9b\x0a\xb6\xf4\x49\xfa\xac\xbd\xb5\xb5\xf5\xb3\x4f\xff\xfe\x6d\xea\xc3\x03\x66\x9c\xd0\xe0\x4c\xfb\x58\x3f\xd1\x00\x07\x2e\xf5\x48\x30\x3e\xd3\x6e\x9c\x8b\xda\xaf\xda\xdf\x9b\x95\xd3\x7f\xab\xd5\xe0\x12\x07\x98\x21\x81\x3d\x98\x13\x31\x81\xb1\x8f\x3c\x0c\x9f\xeb\x9f\x7f\xa9\x9f\x40\xa5\xe2\x4c\x30\x74\x4d\x07\x3a\xc4\xc5\x01\xc7\xf0\x53\xd7\x74\x3e\x54\x2a\x2d\x1a\x2e\x18\x19\x4f\x04\xfc\xe4\x7e\x80\x4f\x27\x9f\x4e\xc0\x44\x01\xfc\x41\x27\x01\xa7\x41\xa5\x72\x8d\xd9\x94\x70\x59\x3a\x10\x0e\x13\xcc\xf0\x70\x01\x63\x86\x02\x81\xbd\x2a\x8c\x18\xc6\x40\x47\xe0\x4e\x10\x1b\xe3\x2a\x08\x0a\x28\x58\x40\x88\x19\xa7\x01\xd0\xa1\x40\x24\x20\xc1\x18\x10\xb8\x34\x5c\x54\xe8\x08\xc4\x84\x70\xe0\x74\x24\xe6\x88\x61\x40\x81\x07\x88\x73\xea\x12\x55\x6f\x8f\xba\xb3\x29\x0e\x04\x12\xb2\xbc\x11\xf1\x31\x87\x9f\xc4\x04\x83\xd6\x8f\x73\x68\x1f\x54\x21\x1e\x46\x7e\x85\x04\x20\xdf\x2d\x5f\xa9\x56\xd3\x99\x00\x86\xb9\x60\xc4\x95\x18\x55\x20\x81\xeb\xcf\x24\x5b\x8f\xaf\x7d\x32\x25\x71\x09\x32\xbb\x6a\x3c\xaf\x08\x0a\x33\x8e\xab\xaa\x9e\x55\x98\x52\x8f\x8c\xe4\xff\x58\x35\x2b\x9c\x0d\x7d\xc2\x27\x55\xf0\x88\x84\x1e\xce\x04\xae\x02\x97\x0f\x15\x97\x55\xd9\x8e\x06\x65\xc0\xb1\xef\x57\x5c\x1a\x12\xcc\x41\xb5\xf5\xa9\x76\x2a\x8d\xac\x7a\x28\x09\x15\x31\x45\x5c\x3e\x99\x4f\xe8\x74\xbd\x25\x84\x57\x46\x33\x16\x10\x3e\xc1\x2a\x8f\x47\x81\x53\x55\xe2\x9f\xd8\x15\xf2\x89\x4c\x3e\xa2\xbe\x4f\xe7\xb2\x69\x2e\x0d\x3c\x22\x5b\xc4\x7f\x8f\x3e\x34\x1a\xd2\x07\xac\xda\x12\x7d\xdb\x80\x0a\xe2\x46\x74\xab\x0f\x10\x3e\x7d\xd5\xf8\x15\x9f\x20\xdf\x87\x21\x8e\x09\xc3\x1e\x90\xa0\x22\x1f\x2d\x9b\xc3\x64\xf1\x5c\xa0\x40\x10\xe4\x43\x48\x99\x2a\xef\x79\x33\xeb\x95\x8a\x73\x65\x40\xbf\x77\xe1\xdc\xea\xb6\x01\x66\x1f\xae\xed\xde\x57\xb3\x6d\xb4\x41\xd3\xfb\x60\xf6\xb5\x2a\xdc\x9a\xce\x55\xef\xc6\x81\x5b\xdd\xb6\x75\xcb\xb9\x83\xde\x05\xe8\xd6\x1d\x7c\x31\xad\x76\x15\x8c\x7f\x5e\xdb\x46\xbf\x0f\x3d\xbb\x62\x76\xaf\x3b\xa6\xd1\xae\x82\x69\xb5\x3a\x37\x6d\xd3\xba\x84\xf3\x1b\x07\xac\x9e\x03\x1d\xb3\x6b\x3a\x46\x1b\x9c\x1e\xc8\x02\x63\x28\xd3\xe8\x4b\xb0\xae\x61\xb7\xae\x74\xcb\xd1\xcf\xcd\x8e\xe9\xdc\x55\x2b\x17\xa6\x63\x49\xcc\x8b\x9e\x0d\x3a\x5c\xeb\xb6\x63\xb6\x6e\x3a\xba\x0d\xd7\x37\xf6\x75\xaf\x6f\x80\x6e\xb5\xc1\xea\x59\xa6\x75\x61\x9b\xd6\xa5\xd1\x35\x2c\xa7\x0e\xa6\x05\x56\x0f\x8c\xaf\x86\xe5\x40\xff\x4a\xef\x74\x64\x51\x15\xfd\xc6\xb9\xea\xd9\xb2\x7e\xd0\xea\x5d\xdf\xd9\xe6\xe5\x95\x03\x57\xbd\x4e\xdb\xb0\xfb\x70\x6e\x40\xc7\xd4\xcf\x3b\x46\x54\x94\x75\x07\xad\x8e\x6e\x76\xab\xd0\xd6\xbb\xfa\xa5\xa1\x72\xf5\x9c\x2b\xc3\xae\xc8\x64\x51\xed\xe0\xf6\xca\x90\x8f\x64\x79\xba\x05\x7a\xcb\x31\x7b\x96\x6c\x46\xab\x67\x39\xb6\xde\x72\xaa\xe0\xf4\x6c\xe7\x31\xeb\xad\xd9\x37\xaa\xa0\xdb\x66\x5f\x12\x72\x61\xf7\xba\xd5\x8a\xa4\xb3\x77\x21\x93\x98\x96\xcc\x67\x19\x11\x8a\xa4\x1a\xd6\xbe\x48\xcf\x56\xbf\x6f\xfa\xc6\x23\x20\xb4\x0d\xbd\x63\x5a\x97\x7d\x30\xad\xb5\xcf\x57\xaf\x54\xf4\x99\x98\x50\xf6\xfb\xaa\x52\x80\x53\x82\x82\x90\x91\x29\x3e\xf9\xf9\xe4\xb7\x7f\x8c\xa7\x88\xf8\x75\x97\x4e\x9b\x95\x4a\xad\xd6\xac\x9c\x92\x40\x60\x36\x42\x2e\x6e\x56\x00\x4e\x19\xfe\xef\x19\x61\x98\x83\x4f\x86\x67\xda\x58\xdc\xff\x87\xf6\xa4\xcf\x3e\xd7\x3f\x7d\xd2\x1a\x2a\x9d\xd4\x60\x8f\x39\x6b\xb1\x64\xd5\xc4\x22\xc4\x20\xe5\x45\x22\x6f\xa4\x0a\xd0\x14\xc3\xe5\x1f\x84\x4f\x68\x72\x02\x0f\x73\x97\x91\x50\x09\xbb\x0e\x7f\xa0\x10\x05\x98\x63\xf0\x22\xed\x80\xd8\x02\x46\x94\xc1\xa5\xd5\xeb\x1a\xf5\x64\x84\x27\x19\x7a\xae\x1b\x93\xd3\x23\xc5\x17\xcf\xc5\xd7\x12\x81\x46\x62\xed\xfa\x88\xf3\x33\xed\x52\xdc\x5f\xd3\x90\x3e\x60\xd6\xc5\xc1\x4c\x03\xe2\x9d\x69\x53\x44\x02\xf5\x4b\xa6\x07\x38\x0d\x19\x0d\x31\x13\x0b\x90\x0c\x9c\x69\x2e\x0a\x06\x23\xea\xce\xb8\xd6\xbc\x40\x3e\xc7\xa7\x8d\x65\x82\x38\xbd\x3b\x21\xbe\x17\xfd\x9d\x54\xde\x39\xfd\xa6\x2d\xdf\x6e\xa2\x3f\x10\x4e\x86\x3e\xd6\x9a\x0e\x9b\x6d\x40\x97\xa9\x4e\x52\x1e\xca\xc8\x52\xf1\x6b\xcd\x07\xcc\x04\x71\x91\x9f\x98\x71\xad\x2d\xc9\xed\xe9\x52\x0f\xfb\xe7\x33\x21\x24\xd8\x4a\xca\x12\x6d\xcb\x68\x5f\x91\x6c\x0c\xbb\x98\x3c\x60\x3e\xf0\xf0\x08\xcd\x7c\x51\x2c\x37\x52\x5d\x76\x20\x7f\x68\x4d\x14\x86\x75\x34\xa4\x33\x91\x37\xb7\xc0\xdf\x84\x06\x82\xa1\x80\xfb\x48\xa0\xa1\x8f\xcf\xb4\x05\xe6\x5a\x53\x97\x28\xb1\x0c\x25\x83\x9d\x36\x22\x7e\xd7\x9e\x85\xc8\xbd\x27\xc1\x78\x7b\xa1\xf8\x5b\x88\x02\x6f\x4b\x27\x48\xca\x34\x22\xbe\x5f\x8c\x99\x90\x72\x12\xf5\x9b\x4f\x69\x2d\xd8\xa8\xee\x69\x63\x5d\x24\x9e\xb5\x71\xb3\x7d\xcf\x0b\xe5\xb3\xe1\x54\x09\xa4\x14\xcd\x3c\x1d\xfc\xa9\x96\x1f\x37\x93\x3f\xab\xe1\x4a\xed\x56\x6b\xb6\xd9\xd1\xf5\x30\xf4\x89\xab\xa4\xe6\x96\x04\x1e\x9d\x47\xea\x02\x85\x61\xfc\xb3\xa4\xbe\x78\xfe\x21\x1f\x70\x20\xb8\xd6\xbc\x6c\x7f\x19\x9c\xdf\x38\x4e\xcf\x1a\xa8\x31\x7a\xd0\xd5\xfb\x5f\xe0\x7f\x40\x3e\xff\x62\xdc\x6d\x3e\xec\x3b\xf6\x4d\xcb\xb9\xb1\x0d\xf5\x30\xab\x98\x58\x2e\x06\x73\xe2\x89\x89\xd6\xfc\xf5\xe4\x24\x6f\x8e\x09\x96\x2a\x5a\x6b\xfe\x92\x90\x85\x93\x71\x80\xfc\x38\xc3\x50\x29\x85\x5a\xc8\x30\xe7\x35\xd5\x2c\x0d\x26\x28\xf0\x7c\xcc\xce\xb4\xb9\xe2\x2c\xd2\x1b\xd7\x32\x85\x06\x7c\x8e\xc2\x10\x7b\x67\x5a\x40\xa3\x71\xea\x39\xe0\x3d\x5e\x6c\x45\xfb\x82\x17\x5b\xa0\x0e\x50\x2f\xe7\x50\xaf\x36\x7e\xc0\xc8\xc7\x2c\xea\x6c\x1c\x23\xe6\x4e\x1e\x9f\xbd\xac\xbe\x2d\xa4\x4a\x94\xba\x53\x42\x37\x90\x76\x84\xd6\xe4\x3e\xf1\x70\x4d\x0d\xe7\xa9\x18\x1b\xed\xcf\xf3\x69\xd2\x6a\xa0\x7a\xf2\x40\x9a\x40\x98\x0b\xad\xf9\x79\xb3\x7b\xee\x4c\xd6\x2e\x84\x25\xe5\xcd\x3d\x10\x6f\x67\xac\x08\x6b\x3b\xb5\x7d\xd7\xf6\xef\x85\x83\xed\x3c\x24\x73\xd1\x57\x72\x63\x04\x82\x2d\x56\x05\x29\x7a\x90\x06\xb3\x23\x51\x19\x64\x95\x85\x98\x22\x36\x26\xc1\x80\x0b\xc4\x84\xd6\xfc\x79\x07\x08\x2c\xed\x85\x5d\x00\x04\x0d\x77\x03\x18\x52\x21\xe8\xb4\x24\x86\xb4\xf2\x11\x5b\x0c\x88\xfb\x68\xaa\x61\x8f\x88\xda\x88\x04\x5e\x8d\x2f\xa6\x43\xea\x13\x77\x67\x60\x69\x0a\x3e\x44\x56\x5c\xce\x0e\x9e\x09\xc9\xb1\xd2\x94\x0f\x85\x00\x73\x0e\x84\x2b\xfd\x7a\xeb\x68\x98\x5d\x46\x84\x54\x73\x27\x28\x18\x63\x6f\xa3\x88\xd6\xf2\x79\x2e\xf0\x24\xbb\x76\x9d\xaf\x24\x1b\x77\x1b\xa3\xb9\xec\xdd\x6d\x00\xd9\xb6\xef\xb6\xdc\x4f\x16\xe6\xd6\x51\x66\xd9\xfa\xad\xcd\x7b\x66\x1f\xaf\xbf\x4a\xe7\x6d\x3b\x67\x3b\xf1\x55\x9e\xab\xd2\x3c\x6d\xe1\x28\x95\x9f\x22\xa3\x61\xdf\x65\xd4\xf7\xb1\xb7\x6a\xba\x2f\xad\x29\x3e\xf3\x05\x7f\x96\xe0\x75\x47\xce\x32\xd9\x27\x5c\xd5\x78\x88\xd8\x20\x94\xaa\x6e\xa1\x35\x03\xfc\x80\x59\x26\xce\x9a\x98\x63\x6f\x8c\x6b\x0c\x23\x77\x92\x20\xe4\x31\x35\x86\x37\xc6\xf6\x32\x49\x0e\x79\x2f\x3a\x3a\x7f\x25\x78\x1e\x52\x39\x9c\xbd\xc9\x48\x5c\x5a\x85\xf0\x09\xf2\xe8\x3c\xb6\x77\x03\x1a\xe4\x03\xd9\x4a\x4e\x32\x41\x1d\xc2\x85\x34\xe7\x36\x7b\xed\x16\xca\xf6\x42\xdb\xbe\xa8\x4b\xa4\x0f\xfb\x38\x72\xb4\x4c\xa9\x87\xb5\xe6\x90\xd1\x79\x01\xb4\xb5\x6e\xcc\xe8\xbc\x16\xe1\xa5\x77\x63\x9b\xce\xfb\x8f\x49\x72\x8e\x89\xd9\x43\xd7\x56\xfd\x9d\x0d\xf0\xaa\xca\xbf\x8c\x9a\xd9\x87\xee\x4f\xf0\xc2\xac\x37\xb4\xa8\xee\x4f\xa6\x26\x21\xf1\x3b\x72\xa8\xa5\x0c\x90\xd9\x0e\xb5\x7c\x8e\x84\x3e\x0e\x11\x43\x82\xbe\xa1\xd7\xe0\x1d\x7d\x8c\x94\x1e\xbb\xaf\x8f\xb1\x39\x37\x7f\x53\xe7\x4d\xa1\x39\x78\x5e\xaf\x4d\x92\xc5\x85\xe5\xc4\x24\xd3\xd2\x7a\x09\xdf\x4c\xd1\xac\x65\xac\xab\x22\xf6\x68\x86\xcd\xf3\xb6\x2e\x9a\x82\xf6\x5b\xba\xa7\x69\xe7\xa6\xec\xa3\x39\x49\x18\xa5\xbc\x4e\xd9\xdc\x24\xf3\xd3\x41\x43\xec\x47\x02\x10\x3b\x02\xbe\xa0\x00\x45\x4f\xdf\x93\xfd\x86\x44\xbc\x21\x83\x6f\x4f\xb8\x9a\x74\x69\xeb\xb9\xc8\xc7\x1a\x3c\x20\x7f\x86\xcf\xb4\x8f\xf5\x4f\xdb\x8d\x2e\xa9\x56\xf3\x96\x76\xca\xc5\xc2\xc7\x99\x35\x52\x9f\x63\xdd\x1d\x53\xbb\x47\x01\xca\xae\x48\x26\x7e\xb6\x89\x98\xc7\xc3\x01\xfb\xf0\x72\x24\x81\x14\xf3\x74\x24\x21\x14\xf2\x76\x40\xb6\xc7\x03\xb2\xad\xe6\x3d\x4a\xda\x9f\xe4\x87\x16\xb5\xff\xfc\xf4\xeb\xa1\x08\xdb\x9f\xe4\x28\x6d\xd9\x08\xb9\xe7\x4d\x4f\x8c\xbc\xb9\xb4\x29\xc3\xae\x8d\x05\x22\x3e\x7f\x7f\xd2\xb6\xfb\x12\xcb\x16\x98\xfc\xcb\x2c\x5b\x40\xd4\x52\xcb\xc7\x9c\xda\x77\x3f\xeb\x2d\x49\x38\x73\x86\xc2\xdd\xbe\xd1\x37\xe4\x93\x71\xfe\x81\xe4\xb9\x9f\x27\x5e\x8e\xc1\x35\x9f\x04\xf7\x2b\x8e\x9e\xe5\xf3\x8e\x7a\x9c\xdb\xb9\x53\x4a\xa1\xa9\xbe\x5e\xf3\xa2\xce\x7e\x54\x68\xd9\x08\x99\x9b\x86\x36\x19\x79\x15\x85\x16\xfa\xc8\xc5\x13\xea\x7b\x98\x6d\x5b\x16\x7b\x75\xf7\x5e\x21\xa7\xd7\xb6\xbe\x51\xd6\x0f\x58\xae\x0b\x94\xb2\x1a\x53\x3e\x75\x22\x05\x79\x3d\x0f\xeb\x7b\x66\xa6\x94\x61\x33\x18\xd1\x94\x5d\x33\x49\x35\x7f\x93\xcd\x20\x29\x3b\x68\x66\xe1\xeb\x6f\x08\x89\xb6\x78\xe5\xde\x4b\xb3\x13\x85\xbb\xd2\x98\x94\xff\x95\xf6\x94\x24\x3b\x54\xf7\xc6\xca\x3e\x98\x39\x2e\xbd\x97\x5d\x7a\x2f\xd1\x21\x04\x72\xef\xfb\x73\x22\xdc\x49\xa2\x96\x49\x6b\xd0\x41\x38\xc4\x26\xb1\x5d\xe6\xe2\x40\x64\xaf\x21\x27\x21\x1c\x37\x26\x2d\x27\xe0\xb2\x1f\x68\xcd\xe5\xb8\xa3\xba\xc5\x0f\x2d\xa7\x39\xa6\xb1\xaf\x2e\xa7\xeb\xb6\x41\xf4\xe8\xd0\x45\xb6\xc4\x14\x3d\x69\x11\x66\xce\x88\x20\xc1\x38\xdf\x8e\x97\xbd\x31\x90\xc1\xc2\x2e\x30\x65\x77\xc2\xe4\x27\x36\x99\xdc\x1c\xfb\x56\xd2\xaa\x5c\x8a\xbe\x24\xa0\xb2\x3e\x8f\x24\xac\x52\xfb\x59\x1e\xc1\x72\x91\x08\x25\x16\x90\xb6\x55\xb9\x34\x8f\x49\x60\xbb\x70\x99\x84\x57\x7a\x91\x69\x0d\x34\x37\xaf\xb0\xc5\x49\x97\x37\xff\x9e\x19\x4e\x02\xdc\x95\xe5\x24\xcc\x92\x1e\xbb\x6d\x90\x7e\xe4\xdc\x4c\x38\xc6\xa5\x96\x14\xf6\x51\x44\x61\x5f\xd8\x1a\x58\xfe\x25\x82\xe4\x6c\x4b\x97\x5e\x74\x9c\x67\xb9\x5e\x30\xa4\xbe\x97\xe5\xd3\xca\x40\x7c\xbe\x00\xf1\xd7\xcf\xbf\xad\xfd\x2b\x02\x9f\x7f\x65\x62\x35\x4f\xb6\x3f\x6d\x2d\x7d\x2e\xdf\xda\x7a\x8e\x3d\xf8\xd9\xb6\x01\x16\xf7\xb9\x6d\x43\x2b\xbc\x7c\xb7\x06\x96\xed\x8b\x5b\x4f\x5e\x40\x5f\xed\x47\xb7\x29\xa3\x46\xad\x2e\xdd\xc6\x96\xcd\x51\xe7\x95\x83\x2c\xee\xde\xdf\x86\x76\x10\xea\xad\xf0\xc6\x83\x35\xb4\xa3\xf6\xd9\xa7\xf6\xc9\xb9\x9c\xb9\x06\x76\xf0\xda\xe7\xa8\x65\x4a\x42\xe6\x77\xd2\x64\x01\x6e\x35\xd5\xd0\x77\xa3\xca\x8e\x96\xda\x0f\xa4\x2b\x73\xae\x94\xae\x81\x1d\xbc\xae\x5c\x5a\x6a\xe8\x68\xa8\x1d\x0d\xb5\xa3\xa1\x76\xb0\xca\xe7\xf3\x21\x29\x9f\xfc\xdf\x29\x27\x68\x3e\xc0\x1c\x60\x2f\xb7\x71\x27\x50\xc7\xd9\x97\x8e\xfa\xb2\x7e\x71\x41\x84\x14\xa9\x04\xbb\xe8\xb6\x10\xf2\x5b\xed\x2f\x4c\x5a\xbc\x50\xf3\xfc\xe3\xca\x45\x6e\x56\x93\x99\x3d\xae\x5c\xac\x82\xed\xb0\x72\xb1\x76\x32\x57\xf5\x4d\xf9\xe4\x7b\x5c\xcc\x78\x7e\x5a\xb7\x28\xcb\x0a\x73\xe3\xcc\xee\x72\xdf\xe6\xea\xa1\xdd\x47\x1a\x6d\x3a\xd7\x9f\xde\x17\xd8\xd4\xf9\x58\x9e\xfa\xb2\x20\xbb\xc5\x99\xb6\xb2\xdb\x2f\xb7\xc5\xf9\x83\x4e\xfa\xd3\x27\xd4\x16\x85\xfb\xd2\xcb\x1f\x3f\x86\xa5\x78\x34\x6d\x9e\xa5\x4a\x32\x6d\x0a\x75\xa2\xfc\x76\x4d\xa1\xa5\xb9\x77\x7b\xee\x22\xf1\x64\xed\x37\x34\x0d\x7d\x7c\xdc\xd4\xf1\x88\x97\xe7\x9a\x93\x25\x6b\x45\x6f\x38\x79\x2c\xe4\x68\x7f\x1d\x90\xfd\xb5\xfc\x9a\x47\x13\x6c\x0b\x66\x2e\x13\x2c\x66\xf2\x68\x84\xe5\x04\x7c\x75\x23\x6c\xd9\xd5\x8f\x76\xd8\x96\xd4\x47\x3b\x6c\x2d\x55\x92\x1d\x56\xb4\x1f\xe5\x37\xc5\x8c\x1d\x91\xdf\xe0\xd0\xd8\xcb\x6d\xc1\x2e\xbb\x4d\x78\x5f\x3b\xb0\x73\x50\xf8\x12\x97\x14\xbe\xf8\x41\xb6\xc2\x87\xac\x76\x3d\xc9\xb6\x65\x66\xf0\x12\x27\xd9\x74\x35\xdc\x9f\xa3\xc3\x39\xb4\x56\xe4\xbc\x59\x14\x14\x40\x99\x66\x43\xe4\xde\x27\x06\x09\xd8\xb9\x35\x49\x99\x8b\xde\xb0\xba\xe3\x14\xe6\x79\xf6\x62\xc1\x07\xd2\x50\x04\xa5\xbe\x20\xe1\x20\x35\x9c\xc0\x79\x8e\x73\x25\xeb\xe6\x9e\xeb\x13\xf7\x7e\xcd\xd0\x0b\xd0\x03\x19\x23\x81\xcf\xd5\x91\x88\x17\xb8\xdb\xd1\x9c\xa2\x31\x3e\xf8\x93\x15\xcf\x30\x56\xae\x14\x1e\xd3\x5a\xc8\xf0\x03\xa1\x33\x5e\xe0\x52\xe1\x03\xb8\xf3\xef\x60\x6e\x5e\x5d\x55\x03\x23\xca\xe6\x88\x79\x47\x4d\xb0\x5f\x4d\x70\x11\xd1\xba\x2f\x65\x10\xc3\x1d\xf5\x41\xb2\x3e\x08\xf0\x37\xf1\x5e\x75\xc1\xde\x6f\xe2\x2c\xa6\x0b\x1c\x3a\x1e\xfb\x78\x55\x23\x2c\x4f\xe0\xad\xbd\x79\x05\xc5\xf0\x3e\x04\xbb\x4b\x19\x86\xf8\xa6\x91\x62\xd2\x2d\x14\x9f\xab\xd2\xbd\xce\xf4\x51\xb8\x13\x84\xfb\x81\xe0\x79\x4d\xf2\xf4\xce\xc4\x1b\xb9\xf7\xb1\xef\x15\x07\xd9\xa3\xc0\xeb\x19\x0a\xef\x78\xa2\xb7\x65\xc6\x9c\x7f\xa2\xb7\xfb\x85\xb7\x45\x6e\x7f\x3d\x80\x68\x5e\x6b\x2f\xd7\x1c\xbf\xca\x51\x34\x5c\x99\xc8\x6e\x6a\x8f\x2b\x8c\x3c\xcc\xd6\x27\xbb\x85\x35\x46\x19\x0d\x91\xdf\xa9\x95\x1e\xbb\x6d\x73\x45\x84\xce\x07\xae\x4f\x39\x1e\x0c\xe3\x41\x2d\xb5\xca\x39\x2e\x0c\xde\x1c\x38\xa3\xab\xcd\xb7\x0c\x9b\xa5\x94\x6d\xc9\x61\x72\xb7\xe1\xb1\xf0\xb0\x18\x85\xf3\x49\x85\xcb\x18\x08\x57\x99\xdb\x3a\x0c\xe6\xf5\xd2\xa4\x0d\x7b\x6f\xe3\xa1\x49\x1f\xde\x8a\x84\xc7\xd9\xe1\x86\xf5\x52\x37\x62\x77\x71\x30\x3b\xb8\x6e\xac\xb2\x0c\x68\x30\x50\x73\xa5\x82\x97\x6a\xbf\xb8\x0c\x88\xad\x5b\x38\x37\x75\xbd\x8a\x73\x1a\x05\x51\x94\x6c\xa7\x66\xfc\xce\x7a\x3d\x0d\x71\x50\x9b\xe2\x60\xf6\xb2\xbd\x3e\xef\xc8\x9e\xcf\x58\x2b\x3c\x83\xdb\x61\xa4\xce\x08\x7b\x39\xa4\x33\xd1\x26\xc8\xa7\xe3\x38\xe0\xe5\xca\x83\x18\xab\xe0\x87\xdb\x94\x14\x4e\xfe\xb5\x25\xc2\xd6\xc6\x81\x0a\xea\xa1\x14\x4b\x67\x43\x8c\x16\x21\x1e\x4c\x48\x20\xb4\xa6\xa7\xaa\x9c\x99\x41\xdd\xc2\x86\x03\x31\x18\x51\xa6\x82\xbf\x46\x3b\x69\xb2\xf2\x85\x8c\x8e\x19\x9a\xc6\x7d\x2e\xd9\x4e\xd8\x90\x8c\x28\x34\xb3\xd6\x3c\xa9\x7f\xac\x67\xc6\xdf\x7c\x8c\x8e\x9c\xa8\x0e\x9e\x62\xcb\xff\xdf\xff\x6e\x84\x4f\xce\x86\x9e\x4e\x55\xd4\xd1\xc4\xa8\xb5\x19\xb1\x9c\xb3\xc0\xe3\xf0\xd2\x5b\xec\x29\x98\x71\xcc\x55\x68\xf3\x3f\xba\xb2\x08\xf8\x69\x22\x44\xf8\x7b\xa3\x31\x9f\xcf\xeb\xd8\x63\xde\xb8\x4e\xd9\xb8\x31\x27\xf7\xa4\x41\x02\x0f\x7f\xab\x87\x93\xb0\x11\xa5\xad\x19\x6d\xb3\xe5\x0c\xda\x8f\x35\x1b\x5c\x33\x2a\xbb\xf0\x07\x15\x81\x5d\x6d\x08\xf3\x88\x9b\x0f\xf2\x8b\x6e\xfd\x61\xb6\xcd\xd6\x13\xc6\x6a\x8b\x89\x8f\x79\x1d\x9c\x89\x64\x22\x8a\x97\x8f\x18\x56\xd5\x7e\x6c\x71\x1c\xa1\xdd\xf0\xb1\x2b\x18\x0d\x88\x0b\x4f\x15\x03\x1b\x47\x96\x87\xaa\x58\x1b\x3f\x60\x9f\x86\x92\x76\xb8\x64\x74\x16\xa6\xd4\xf0\x43\x14\xcc\x5e\x96\x34\xe3\x2a\x52\x3c\xb8\x34\x18\x51\x36\x45\x81\x1b\xc5\xe1\x57\x45\x2a\x8c\x7f\xe7\x10\xb3\x9d\x82\xa6\xfe\x6a\xa8\x34\x2e\xae\x4f\xc4\xd4\xff\x50\xaf\x54\xe2\xa5\x5a\xe0\x38\x10\xf2\x05\x78\x48\x20\x70\xe9\x14\x73\x18\xb1\x38\x60\xbe\x83\x04\xc5\x43\x24\xdb\xaa\x34\x84\x2a\x80\xff\xde\x68\x88\xe8\x85\xc4\x8f\x38\x27\x8f\xb5\xf0\x60\x16\x78\x98\xa9\xfc\xad\x56\xed\xfc\x0e\x3e\xd5\x4f\xe0\xc2\x5e\xaf\xa5\x04\x71\x19\x46\x82\x3c\x60\xd9\x13\x69\xc0\x55\x65\xe3\x44\xbc\x31\x5c\x34\x3e\xd5\x4f\x1a\x23\xd6\xf0\x30\xf6\xea\x38\x18\x5c\x9e\xcb\x7a\xab\x8f\x0b\x5c\x30\x7a\x8f\x81\x32\x59\x52\x52\xcd\x55\xb2\xaf\x97\x9b\x35\x1f\x13\x31\x99\x0d\xeb\x2e\x9d\x36\xe2\x34\x0d\xb5\x2f\xf1\x61\xfc\xa1\xba\x12\xd0\xff\xc6\x67\xc4\x9d\x80\x1e\x62\xbf\x9a\xd5\xc0\x5a\x5f\x87\xcf\xf5\x93\x8d\xcf\x90\xd1\xbe\x1a\x47\x8d\xcf\xf5\x93\x86\x6c\x55\x2c\x13\x44\x70\xec\x8f\x52\xca\xea\x9a\xce\xf2\x71\x15\x10\x87\x11\xf5\x7d\x3a\xe7\xbf\x57\x2a\xad\xd4\x18\xea\x95\xca\x35\x66\x53\xc2\xa5\xca\x91\xb0\x13\xcc\xf0\x70\x01\x63\x86\x02\x81\xbd\x2a\x8c\x18\xc6\xb2\x03\xbb\x13\xc4\xc6\xb8\x0a\x82\x02\x0a\x16\x10\x62\xc6\x69\x00\x74\x28\x10\x09\x48\x30\x06\xa4\xa8\x89\xba\x3a\xe1\xc0\xe9\x48\xcc\x65\xf7\x54\xdd\x94\x73\xea\x12\x24\xb0\x07\x1e\x75\x67\xd3\xe5\xf5\x37\xb1\xbc\xfc\x24\xeb\xae\xf5\xe3\x1c\xda\x07\x55\x88\x87\x91\x2f\xbb\xb5\x7c\xb7\x7c\xa5\xfa\x35\x9d\x09\x60\x98\x0b\x16\x89\x50\x15\x48\xe0\xfa\x33\x4f\xd6\x61\xf9\xda\x27\x53\x12\x97\x20\xb3\xab\x86\x73\x09\x3a\x93\xc4\xc8\x7a\x56\x61\x4a\x3d\x32\x92\xff\x63\xd5\xac\x70\x36\xf4\x09\x9f\x54\xc1\x23\x3c\xde\x80\x52\x05\x2e\x1f\x2e\xe9\x0c\xbc\x06\x65\xc0\xb1\xef\x4b\x04\x82\xf9\x52\xac\x97\xb5\x8b\x7a\x81\xa0\x92\x9b\x29\x11\x31\x45\xaa\xdc\xf9\x24\xee\x74\x8f\x2d\x21\x1c\x46\x33\x16\x10\x3e\xc1\x2a\x8f\x47\x81\x53\x55\xa2\xea\x8c\x82\xaa\xe4\xd1\x07\x94\x4d\x73\x69\xe0\xa9\xa1\x5e\x7e\x4d\x67\x82\x01\x0d\xe9\x03\x5e\xe9\x8e\x01\x15\xc4\x8d\xe8\x56\x1f\x20\x7c\xfa\xaa\xf1\x2b\x3e\x41\xbe\x0f\x43\x1c\x13\x16\x69\x0d\xb4\xd2\x1c\x26\x8b\xe7\x02\x05\x82\x20\x1f\x42\xca\x54\x79\xcf\x9b\x59\xaf\x54\x9c\x2b\x03\xfa\xbd\x0b\xe7\x56\xb7\x0d\x30\xfb\x70\x6d\xf7\xbe\x9a\x6d\xa3\x0d\x9a\xde\x07\xb3\xaf\x55\xe1\xd6\x74\xae\x7a\x37\x0e\xdc\xea\xb6\xad\x5b\xce\x1d\xf4\x2e\x40\xb7\xee\xe0\x8b\x69\xb5\xab\x60\xfc\x53\x85\xa9\x86\x9e\x0d\x66\xf7\xba\x63\x1a\xed\x2a\x98\x56\xab\x73\xd3\x36\xad\x4b\x38\xbf\x71\xc0\xea\x39\xd0\x31\xbb\xa6\x63\xb4\xc1\xe9\x81\x2c\x30\x86\x32\x8d\xbe\x04\xeb\x1a\x76\xeb\x4a\xb7\x1c\xfd\xdc\xec\x98\xce\x5d\x15\x2e\x4c\xc7\x92\x98\x17\x3d\x1b\x74\xb8\xd6\x6d\xc7\x6c\xdd\x74\x74\x1b\xae\x6f\xec\xeb\x5e\xdf\x00\xdd\x6a\x83\xd5\xb3\x4c\xeb\xc2\x36\xad\x4b\xa3\x6b\x58\x4e\x1d\x4c\x0b\xac\x1e\x18\x5f\x0d\xcb\x81\xfe\x95\xde\xe9\xa8\xa2\xf4\x1b\xe7\xaa\x67\xab\xfa\xb5\x7a\xd7\x77\xb6\x79\x79\xe5\xc0\x55\xaf\xd3\x36\xec\x3e\x9c\x1b\xd0\x31\xf5\xf3\x8e\x11\x15\x65\xdd\x41\xab\xa3\x9b\xdd\x2a\xb4\xf5\xae\x7e\x69\xa8\x5c\x3d\xe7\xca\xb0\x55\xb2\xb8\x76\xb7\x57\x86\x7a\x64\x5a\xa0\x5b\xa0\xb7\x1c\xb3\x67\xc9\x66\xb4\x7a\x96\x63\xeb\x2d\xa7\x0a\x4e\xcf\x76\x1e\xb3\xde\x9a\x7d\xa3\x0a\xba\x6d\xf6\x25\x21\x17\x76\xaf\x5b\x05\x49\x67\xef\x42\x71\x66\xc9\x7c\x96\x11\xa1\x48\xaa\x61\xed\x8b\xf4\x6c\xf5\xfb\xa6\x6f\x3c\xd5\xa5\x6d\xe8\x1d\xd3\xba\xec\xcb\xcc\xab\x89\xeb\x95\xac\x81\x1a\xcd\xc4\x84\x32\xae\x35\x57\x94\x06\xfc\xc5\x17\x7f\x23\x28\x08\x19\x99\xe2\x93\x9f\x4f\x7e\xfb\xc7\x78\x8a\x88\x2f\x75\xe6\x5f\xc6\xe2\x6f\x99\x63\x3f\x1d\xd3\xd5\x00\xad\x44\xce\x19\x6a\xaa\xbb\x06\x99\xa6\xd8\x9c\xa1\x70\xb0\xb4\x1e\x72\x59\x7b\x71\xe2\xd8\xbc\x76\x67\x5c\xd0\xe9\x46\x9e\x35\xef\x80\x87\x7d\x2c\xf0\x46\x18\xd5\x09\xf1\xf0\x2d\xf1\xc6\x58\xe4\x08\x4b\x9e\x82\x41\x82\x09\x19\x12\x61\xa9\x09\x5c\x26\x08\xc3\x3c\xa4\xca\x4c\xca\x5d\x89\xc8\xbd\x46\x02\x81\x59\x80\xfc\x9a\xfa\x79\xa6\x3d\x0c\x57\x2e\x53\x2b\x1a\xe6\xbc\x8c\xb7\x2c\xf7\x2d\x67\x1b\x2e\xb2\x10\xb9\x24\x18\xa7\x38\x1f\x53\x9a\x87\xa2\x0d\xb0\x88\x61\xa4\x6d\xf7\x28\x44\xde\x84\xec\x48\x5b\x65\x83\x66\xf9\x68\x41\x67\x62\xa0\xae\x77\xdf\x3e\x97\x4b\x9e\x50\xa7\xdf\x3e\x5e\x64\xcb\x50\x21\x94\x37\x09\xc0\x56\x28\xcb\x4b\x85\xc3\x4b\xa6\x69\x6f\xbe\xec\x4d\xf8\xdc\xf3\xeb\x84\x43\x1c\x71\x1c\x8d\xb5\x23\x1c\xbb\xce\xb1\x33\x37\x6a\xa6\x2d\x33\xee\x30\xf9\x8e\x1d\x5f\x03\x15\x99\x5f\x6b\xfe\xb2\x79\x8b\x78\x5a\x8e\xe8\x02\xf2\x5c\x59\x72\x4f\xd8\x0f\x46\xef\xaf\xf7\xb9\xac\xd3\x3d\x2f\xb3\x16\x92\x37\x4b\x91\x53\x38\x1b\xf5\xdb\x21\xef\xda\x81\x12\xb2\xe1\xc0\x48\x91\xf2\xbc\xe7\x6c\xf6\xed\x53\x2e\xa4\xe2\x72\x9f\x95\xc9\xeb\x88\x4d\xbe\x3d\xf5\x20\xdc\xb0\x85\x6f\x40\x4d\xb5\x11\x3e\x6e\xbd\x37\xa5\xc8\x1e\x94\xd5\xa8\x45\x6b\xfa\x76\xe9\xe6\xda\x76\xba\xe4\xa5\xf6\xa0\x94\xda\x9c\x56\xf0\x62\x99\x94\xec\xf9\x6e\x5b\x4f\x32\xce\xcb\xb5\x3a\xf7\x6d\x33\x39\xce\xa9\xec\x12\xfc\x2c\xeb\x04\xca\x31\xf6\x7e\x9a\x29\x0a\xfb\x92\x38\x23\x18\xfb\x84\x4f\x8e\x02\x97\x23\xf3\x3b\x11\xb8\xbc\x57\xc8\xfd\x40\xd2\xf7\xc6\x7b\x2e\xb7\x9c\x16\x8f\xc5\x30\xd7\x99\xf1\x43\xda\x7d\x59\xf6\x6c\x78\x0e\x0b\x15\xf9\x73\xb4\xc8\xde\x6b\x59\x70\x63\x64\x8e\xf3\xde\x07\xb9\x37\xb2\xd4\xb9\xee\x52\xa1\x24\x13\xce\x71\x2f\xa7\xc1\x94\x79\x79\x8e\x74\xef\x4c\xe0\xbe\x48\x4c\x24\x72\x87\xa3\xdb\x85\x8e\x6c\xaf\x90\x56\xe6\xd8\x76\xf6\x79\xd3\xd7\x0f\x87\x57\x56\xe1\x97\xd1\x2c\xfb\xd0\xf7\x19\x87\x2d\xf7\xb5\x8d\xb6\xcc\x5e\xac\x37\xf7\x70\xa9\xf5\xd5\xd7\xf5\x6f\x45\xab\xc4\x47\xef\xd6\xd1\xbb\xb5\x9b\x77\xeb\xe8\x6e\xfa\x0e\xdd\x4d\xe5\x66\xb1\xab\x5a\xac\x35\x41\x0c\xb9\x02\xb3\x77\x33\x8b\xfd\x73\xc6\x05\x19\x2d\xf2\xc6\xfa\xdb\x7d\x56\xf8\xa9\xfe\xd7\x5f\x8f\x6e\x98\x37\x77\xc3\xa4\x5e\xa7\xfa\x5e\xa7\x81\x45\x16\x18\xf2\x91\x96\x4c\xdc\x71\xf6\x96\x41\xd0\xfa\x0d\xa8\xcb\xee\xa4\xf6\xe5\xf5\x58\xf6\x55\x4f\x07\x3d\x73\x2b\x1e\x18\x35\x09\xa5\xe4\x1d\xf0\x3b\x79\x10\x33\x40\x8a\xc5\xdf\x48\x01\x29\x14\x28\x35\x09\xe7\x71\x81\x27\x3f\x42\xbe\x1b\x98\xf2\x05\x77\x87\xec\x19\x2d\x7c\x67\xd3\xe2\x1f\xd5\x0f\x9a\x62\xbf\xf5\x67\x43\x35\x77\xfc\x3e\xcd\xb7\xef\xa8\xfb\xec\xdd\xad\x52\x3c\x7a\xfe\x46\xe7\xb1\x31\xf2\x48\x30\xee\x62\x14\x90\x60\xcc\xdf\x43\xf7\x79\xcb\x35\xac\x72\x71\xf9\x4b\x8f\x18\x19\x76\x5e\xf6\x08\xf1\x5d\xeb\x65\xe4\x79\x39\x69\x4c\x15\xc9\x8c\x38\x21\x2f\x2d\x92\x86\x62\x2e\xd5\xbc\x7c\xd3\xa9\x4a\xc1\x29\x46\xca\xe0\xd4\x26\xae\xb0\xf1\x28\x33\x4e\xd2\x41\x4e\x3f\x4a\xd8\xbc\x3b\xdb\xbb\x1b\xc2\xe5\xfb\x24\xe4\xe4\x5f\x58\x6b\x4e\x89\xe7\xf9\xa5\x1a\x52\x20\x3e\x52\x69\x3b\xef\x99\x03\xde\xdf\xfa\xc1\x8b\xdf\x88\x7b\x90\x1d\x24\xfd\x86\xdb\x95\x53\x73\x0c\x8f\x30\xc3\x81\x9b\xe7\x26\xd1\xa3\x95\xad\x35\xff\x7a\xd4\xc9\x2f\xab\x93\xff\x6b\x86\xd9\xa2\x45\x3d\x7c\xd4\xca\x47\xad\xbc\x96\xf4\x7b\xd7\xca\xaa\xe7\x83\x2b\xbb\xfe\x51\x17\xa7\xe7\x7c\xd2\xc5\x19\xc2\xf1\x5d\xef\x04\x38\x6d\xa8\xa3\x5b\x23\xe4\xe2\x66\xe5\xff\x03\x00\x00\xff\xff\x3b\x1a\x69\x36\x5b\xbf\x00\x00")

func dataGjishoGladeBytes() ([]byte, error) {
	return bindataRead(
		_dataGjishoGlade,
		"data/gjisho.glade",
	)
}

func dataGjishoGlade() (*asset, error) {
	bytes, err := dataGjishoGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/gjisho.glade", size: 48987, mode: os.FileMode(436), modTime: time.Unix(1593809043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/gjisho.glade": dataGjishoGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"gjisho.glade": &bintree{dataGjishoGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

