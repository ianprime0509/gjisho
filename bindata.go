// Code generated by go-bindata. DO NOT EDIT.
// sources:
// data/gjisho.glade
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataGjishoGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdf\x7a\xe2\xb8\x92\xbf\xe7\x29\x6a\x7d\x71\x76\xfa\x5b\xfe\xa4\xbb\xcf\xcc\xce\xcc\x49\x38\xc7\x01\x27\xf1\x34\x98\xac\x71\x3a\x27\x57\x7c\xc2\x16\xa0\x89\xb1\xbc\x92\x08\xcd\xf9\xf6\x85\xf6\x35\xf6\xc9\xf6\x93\x6c\x12\x08\x36\xfe\x03\x49\x48\x37\x7d\xd3\xc1\x56\xfd\x24\x95\xab\x4a\xa5\xd2\x9f\x3a\xfd\xfb\xb7\xa9\x0f\x0f\x98\x71\x42\x83\x33\xed\x63\xfd\x44\x03\x1c\xb8\xd4\x23\xc1\xf8\x4c\xbb\x71\x2e\x6a\xbf\x6a\x7f\x6f\x56\x4e\xff\xad\x56\x83\x4b\x1c\x60\x86\x04\xf6\x60\x4e\xc4\x04\xc6\x3e\xf2\x30\x7c\xae\x7f\xfe\xa5\x7e\x02\x95\x8a\x33\xc1\xd0\x35\x1d\xe8\x10\x17\x07\x1c\xc3\x4f\x5d\xd3\xf9\x50\xa9\xb4\x68\xb8\x60\x64\x3c\x11\xf0\x93\xfb\x01\x3e\x9d\x7c\x3a\x01\x13\x05\xf0\x07\x9d\x04\x9c\x06\x95\xca\x35\x66\x53\xc2\x65\xed\x40\x38\x4c\x30\xc3\xc3\x05\x8c\x19\x0a\x04\xf6\xaa\x30\x62\x18\x03\x1d\x81\x3b\x41\x6c\x8c\xab\x20\x28\xa0\x60\x01\x21\x66\x9c\x06\x40\x87\x02\x91\x80\x04\x63\x40\xe0\xd2\x70\x51\xa1\x23\x10\x13\xc2\x81\xd3\x91\x98\x23\x86\x01\x05\x1e\x20\xce\xa9\x4b\x54\xbb\x3d\xea\xce\xa6\x38\x10\x48\xc8\xfa\x46\xc4\xc7\x1c\x7e\x12\x13\x0c\x5a\x3f\xa6\xd0\x3e\xa8\x4a\x3c\x8c\xfc\x0a\x09\x40\xbe\x5b\xbe\x52\xbd\xa6\x33\x01\x0c\x73\xc1\x88\x2b\x31\xaa\x40\x02\xd7\x9f\x49\x6e\x3d\xbe\xf6\xc9\x94\xc4\x35\x48\x72\xd5\x79\x5e\x11\x14\x66\x1c\x57\x55\x3b\xab\x30\xa5\x1e\x19\xc9\xff\xb1\xea\x56\x38\x1b\xfa\x84\x4f\xaa\xe0\x11\x09\x3d\x9c\x09\x5c\x05\x2e\x1f\x2a\x5e\x56\x65\x3f\x1a\x94\x01\xc7\xbe\x5f\x71\x69\x48\x30\x07\xd5\xd7\xa7\xd6\xa9\x32\xb2\xe9\xa1\x64\xa8\x88\x59\xc4\xe5\x93\xf9\x84\x4e\xd7\x7b\x42\x78\x65\x34\x63\x01\xe1\x13\xac\x68\x3c\x0a\x9c\xaa\x1a\xff\xc4\xae\x90\x4f\x64\xf1\x11\xf5\x7d\x3a\x97\x5d\x73\x69\xe0\x11\xd9\x23\xfe\x7b\xf4\xa1\xd1\x90\x3e\x60\xd5\x97\xe8\xdb\x06\x54\x10\x37\x62\xb7\xfa\x00\xe1\xd3\x57\x8d\x5f\xf1\x09\xf2\x7d\x18\xe2\x98\x61\xd8\x03\x12\x54\xe4\xa3\x65\x77\x98\xac\x9e\x0b\x14\x08\x82\x7c\x08\x29\x53\xf5\x3d\xef\x66\xbd\x52\x71\xae\x0c\xe8\xf7\x2e\x9c\x5b\xdd\x36\xc0\xec\xc3\xb5\xdd\xfb\x6a\xb6\x8d\x36\x68\x7a\x1f\xcc\xbe\x56\x85\x5b\xd3\xb9\xea\xdd\x38\x70\xab\xdb\xb6\x6e\x39\x77\xd0\xbb\x00\xdd\xba\x83\x2f\xa6\xd5\xae\x82\xf1\xcf\x6b\xdb\xe8\xf7\xa1\x67\x57\xcc\xee\x75\xc7\x34\xda\x55\x30\xad\x56\xe7\xa6\x6d\x5a\x97\x70\x7e\xe3\x80\xd5\x73\xa0\x63\x76\x4d\xc7\x68\x83\xd3\x03\x59\x61\x0c\x65\x1a\x7d\x09\xd6\x35\xec\xd6\x95\x6e\x39\xfa\xb9\xd9\x31\x9d\xbb\x6a\xe5\xc2\x74\x2c\x89\x79\xd1\xb3\x41\x87\x6b\xdd\x76\xcc\xd6\x4d\x47\xb7\xe1\xfa\xc6\xbe\xee\xf5\x0d\xd0\xad\x36\x58\x3d\xcb\xb4\x2e\x6c\xd3\xba\x34\xba\x86\xe5\xd4\xc1\xb4\xc0\xea\x81\xf1\xd5\xb0\x1c\xe8\x5f\xe9\x9d\x8e\xac\xaa\xa2\xdf\x38\x57\x3d\x5b\xb6\x0f\x5a\xbd\xeb\x3b\xdb\xbc\xbc\x72\xe0\xaa\xd7\x69\x1b\x76\x1f\xce\x0d\xe8\x98\xfa\x79\xc7\x88\xaa\xb2\xee\xa0\xd5\xd1\xcd\x6e\x15\xda\x7a\x57\xbf\x34\x14\x55\xcf\xb9\x32\xec\x8a\x2c\x16\xb5\x0e\x6e\xaf\x0c\xf9\x48\xd6\xa7\x5b\xa0\xb7\x1c\xb3\x67\xc9\x6e\xb4\x7a\x96\x63\xeb\x2d\xa7\x0a\x4e\xcf\x76\x1e\x49\x6f\xcd\xbe\x51\x05\xdd\x36\xfb\x92\x21\x17\x76\xaf\x5b\xad\x48\x76\xf6\x2e\x64\x11\xd3\x92\x74\x96\x11\xa1\x48\x56\xc3\xda\x17\xe9\xd9\xea\xf7\x4d\xdf\x78\x04\x84\xb6\xa1\x77\x4c\xeb\xb2\x0f\xa6\xb5\xf6\xf9\xea\x95\x8a\x3e\x13\x13\xca\x7e\x5f\x35\x0a\x70\x4a\x50\x10\x32\x32\xc5\x27\x3f\x9f\xfc\xf6\x8f\xf1\x14\x11\xbf\xee\xd2\x69\xb3\x52\xa9\xd5\x9a\x95\x53\x12\x08\xcc\x46\xc8\xc5\xcd\x0a\xc0\x29\xc3\xff\x3d\x23\x0c\x73\xf0\xc9\xf0\x4c\x1b\x8b\xfb\xff\xd0\x9e\xec\xd9\xe7\xfa\xa7\x4f\x5a\x43\x95\x93\x16\xec\x91\xb2\x16\x6b\x56\x4d\x2c\x42\x0c\x52\x5f\x24\xf2\x46\xa9\x00\x4d\x31\x5c\xfe\x41\xf8\x84\x26\x17\xf0\x30\x77\x19\x09\x95\xb2\xeb\xf0\x07\x0a\x51\x80\x39\x06\x2f\xb2\x0e\x88\x2d\x60\x44\x19\x5c\x5a\xbd\xae\x51\x4f\x46\x78\xd2\xa1\xe7\xb6\x31\xb9\x3c\x52\xfc\xe2\xb9\xf8\xb5\x44\xa0\x91\x5a\xbb\x3e\xe2\xfc\x4c\xbb\x14\xf7\xd7\x34\xa4\x0f\x98\x75\x71\x30\xd3\x80\x78\x67\xda\x14\x91\x40\xfd\x92\xe5\x01\x4e\x43\x46\x43\xcc\xc4\x02\x24\x07\xce\x34\x17\x05\x83\x11\x75\x67\x5c\x6b\x5e\x20\x9f\xe3\xd3\xc6\xb2\x40\x5c\xde\x9d\x10\xdf\x8b\xfe\x4e\xaa\xef\x9c\x7e\xd3\x96\x6f\x37\xd1\x1f\x08\x27\x43\x1f\x6b\x4d\x87\xcd\x36\xa0\xcb\x34\x27\x89\x86\x32\xb2\x34\xfc\x5a\xf3\x01\x33\x41\x5c\xe4\x27\x12\xae\xf5\x25\xb9\x3f\x5d\xea\x61\xff\x7c\x26\x84\x04\x5b\x29\x59\xa2\x6f\x19\xfd\x2b\x42\xc6\xb0\x8b\xc9\x03\xe6\x03\x0f\x8f\xd0\xcc\x17\xc5\xa8\x91\x12\xd9\x81\xfc\xa1\x35\x51\x18\xd6\xd1\x90\xce\x44\x5e\x6a\x81\xbf\x09\x0d\x04\x43\x01\xf7\x91\x40\x43\x1f\x9f\x69\x0b\xcc\xb5\xa6\x2e\x51\x62\x1d\x4a\x06\x3b\x6d\x44\xfc\x5d\x7b\x16\x22\xf7\x9e\x04\xe3\xed\x95\xe2\x6f\x21\x0a\xbc\x2d\x42\x90\x44\x34\x22\xbe\x5f\x8c\x33\x21\xe5\x24\x92\x9b\x4f\x69\x3d\xd8\x68\xee\x69\x63\x5d\x25\x9e\xf5\x71\xb3\x7f\xcf\x2b\xe5\xb3\xe1\x54\x29\xa4\x54\xcd\x3c\x02\xfe\xd4\xca\x8f\x9b\xc5\x9f\xb5\x70\xa5\x75\xab\x2d\xdb\x14\x74\x3d\x0c\x7d\xe2\x2a\xad\xb9\x25\x81\x47\xe7\x91\xb9\x40\x61\x18\xff\x2c\x69\x2f\x9e\x7f\xc8\x07\x1c\x08\xae\x35\x2f\xdb\x5f\x06\xe7\x37\x8e\xd3\xb3\x06\x6a\x8c\x1e\x74\xf5\xfe\x17\xf8\x1f\x90\xcf\xbf\x18\x77\x9b\x0f\xfb\x8e\x7d\xd3\x72\x6e\x6c\x43\x3d\xcc\xaa\x26\xd6\x8b\xc1\x9c\x78\x62\xa2\x35\x7f\x3d\x39\xc9\x4b\x31\xc1\xd2\x44\x6b\xcd\x5f\x12\x48\x38\x19\x07\xc8\x8f\x09\x86\xca\x28\xd4\x42\x86\x39\xaf\xa9\x6e\x69\x30\x41\x81\xe7\x63\x76\xa6\xcd\x15\xcf\x22\xbb\x71\x2d\x4b\x68\xc0\xe7\x28\x0c\xb1\x77\xa6\x05\x34\x1a\xa7\x9e\x03\xde\xe3\xc5\x56\xb4\x2f\x78\xb1\x05\xea\x00\xed\x72\x0e\xf3\x6a\xe3\x07\x8c\x7c\xcc\x22\x61\xe3\x18\x31\x77\xf2\xf8\xec\x65\xed\x6d\x21\x53\xa2\xcc\x9d\x52\xba\x81\xf4\x23\xb4\x26\xf7\x89\x87\x6b\x6a\x38\x4f\xc5\xd8\xe8\x7f\x9e\x4f\x93\xd6\x02\x25\xc9\x03\xe9\x02\x61\x2e\xb4\xe6\xe7\x4d\xf1\xdc\x99\x59\xbb\x30\x2c\x89\x36\xf7\x40\xbc\x9d\x63\x45\xb8\xb6\x53\xdf\x77\xed\xff\x5e\x78\xb0\x9d\x0f\xc9\xbc\xe8\x2b\xbd\x31\x02\xc1\x16\xab\x8a\x14\x3d\x48\x83\xd9\x91\x51\x19\xcc\x2a\x0b\x31\x45\x6c\x4c\x82\x01\x17\x88\x09\xad\xf9\xf3\x0e\x10\x58\xfa\x0b\xbb\x00\x08\x1a\xee\x06\x30\xa4\x42\xd0\x69\x49\x0c\xe9\xe5\x23\xb6\x18\x10\xf7\xd1\x55\xc3\x1e\x11\xb5\x11\x09\xbc\x1a\x5f\x4c\x87\xd4\x27\xee\xce\xc0\xd2\x15\x7c\x88\xbc\xb8\x9c\x02\x9e\x09\xc9\xb1\xb2\x94\x0f\x85\x00\x73\x0e\x84\x2b\x72\xbd\x75\x34\xcc\xae\x23\x42\xaa\xb9\x13\x14\x8c\xb1\xb7\x51\x45\x6b\xf9\x3c\x17\x78\x92\x5f\xbb\xce\xaf\x24\x1f\x77\x1b\x47\x73\xf9\xbb\xdb\x00\xb2\x7d\xdf\x6d\xd4\x4f\x1e\xe6\xd6\x51\x66\xd9\xfb\xad\xdd\x7b\xe6\x1f\xaf\xbf\x4a\xe7\xdb\x76\x9e\xed\xc4\xaf\xf2\xbc\x2a\xcd\xa7\x2d\x3c\x4a\xe5\x4f\x91\xd1\xb0\xef\x32\xea\xfb\xd8\x5b\x75\xdd\x97\xde\x14\x9f\xf9\x82\x3f\x2b\xf0\xba\x23\x67\x19\xf2\x09\x57\x2d\x1e\x22\x36\x08\xa5\xa9\x5b\x68\xcd\x00\x3f\x60\x96\x89\xb3\xa6\xe6\xd8\x1b\xe3\x1a\xc3\xc8\x9d\x24\x28\x79\xcc\x1a\xc3\x1b\x63\x7b\x59\x24\x87\xbe\x17\x1d\x9d\xbf\x12\x3c\x0f\xa9\x1c\xce\xde\x64\x24\x2e\x6d\x42\xf8\x04\x79\x74\x1e\xfb\xbb\x01\x0d\xf2\x81\x6c\x65\x4e\x32\x83\x3a\x84\x0b\xe9\xce\x6d\x4a\xed\x16\x96\xed\x85\x6d\xfb\x62\x5d\x22\xfb\xb0\x8f\xa3\x40\xcb\x94\x7a\x58\x6b\x0e\x19\x9d\x17\x40\x5b\x13\x63\x46\xe7\xb5\x08\x2f\x5d\x8c\x6d\x3a\xef\x3f\x16\xc9\x39\x26\x66\x0f\x5d\x5b\xed\x77\x36\xc0\xab\x1a\xff\x32\x66\x66\x1f\xb6\x3f\x21\x0a\xb3\xde\xd1\xa2\xb6\x3f\x99\x35\x09\x85\xdf\x51\x40\x2d\x65\x80\xcc\x0e\xa8\xe5\x0b\x24\xf4\x71\x88\x18\x12\xf4\x0d\xa3\x06\xef\xe8\x63\xa4\x48\xec\xbe\x3e\xc6\xe6\xdc\xfc\x4d\x83\x37\x85\xe6\xe0\x79\xa3\x36\x49\x1e\x17\x96\x13\x93\x4c\x4f\xeb\x25\x62\x33\x45\x49\xcb\x78\x57\x45\xfc\xd1\x0c\x9f\xe7\x6d\x43\x34\x05\xfd\xb7\xf4\x48\xd3\xce\x5d\xd9\x47\x77\x92\x30\x4a\x45\x9d\xb2\x79\x93\xcc\x9f\x0e\x1a\x62\x3f\x52\x80\x38\x10\xf0\x05\x05\x28\x7a\xfa\x9e\xfc\x37\x24\xe2\x0d\x19\x7c\x7b\xc1\xd5\xa2\x4b\x5f\xcf\x45\x3e\xd6\xe0\x01\xf9\x33\x7c\xa6\x7d\xac\x7f\xda\xee\x74\x49\xb3\x9a\xb7\xb6\x53\x2e\x16\x3e\xce\x6c\x91\xfa\x1c\xeb\xe1\x98\xda\x3d\x0a\x50\x76\x43\x32\xf1\xb3\x5d\xc4\x3c\x11\x0e\xd8\x47\x94\x23\x09\xa4\x58\xa4\x23\x09\xa1\x50\xb4\x03\xb2\x23\x1e\x90\xed\x35\xef\x51\xd3\xfe\x24\x3f\xb4\xaa\xfd\xe7\xa7\x5f\x0f\x45\xd9\xfe\x24\x47\x6d\xcb\x46\xc8\x3d\x6f\x7a\xe2\xc8\x9b\x6b\x9b\x72\xec\xda\x58\x20\xe2\xf3\xf7\xa7\x6d\xbb\x2f\xb1\x6c\x81\xc9\xbf\xcc\xb2\x05\x44\x2d\xb5\x7c\xcc\x69\x7d\xf7\xb3\xde\x92\x84\x33\x67\x28\xdc\xed\x1b\x7d\x43\x3e\x19\xe7\x1f\x48\x9e\xc7\x79\xe2\xe5\x18\x5c\xf3\x49\x70\xbf\x12\xe8\x59\x3e\xef\xa8\xc7\xb9\x83\x3b\xa5\x0c\x9a\x92\xf5\x9a\x17\x09\xfb\xd1\xa0\x65\x23\x64\x6e\x1a\xda\xe4\xc8\xab\x18\xb4\xd0\x47\x2e\x9e\x50\xdf\xc3\x6c\xdb\xb2\xd8\xab\x87\xf7\x0a\x05\xbd\xb6\xc9\x46\xd9\x38\x60\x39\x11\x28\xe5\x35\xa6\x7c\xea\x44\x16\xe4\x8d\x3c\xac\xef\x99\x99\x52\x86\xcd\x60\x44\x53\x76\xcd\x24\xb5\xfc\x4d\x36\x83\xa4\xec\xa0\x99\x85\xaf\xbf\x21\x24\xda\xe2\x95\x7b\x2f\xcd\x4e\x2c\xdc\x95\x8d\x49\xf4\xaf\xb4\xa7\x24\x39\xa0\xba\x37\xae\xec\x83\x33\xc7\xa5\xf7\xb2\x4b\xef\x25\x04\x42\x20\xf7\xbe\x3f\x27\xc2\x9d\x24\x5a\x99\xb4\x0e\x1d\x44\x40\x6c\x12\xfb\x65\x2e\x0e\x44\xf6\x1a\x72\x12\xc2\x71\x63\xd2\x72\x02\x2e\xe5\x40\x6b\x2e\xc7\x1d\x25\x16\x3f\xb4\x9e\xe6\x98\xc6\xbe\xba\x9e\xae\xfb\x06\xd1\xa3\x43\x57\xd9\x12\x53\xf4\xa4\x45\x98\x39\x23\x82\x04\xe3\x7c\x3b\x5e\xf6\xc6\x81\x0c\x2e\xec\x02\x53\x76\x27\x4c\x7e\xc6\x26\x33\x37\xc7\xbe\x95\xb4\x26\x97\x62\x5f\x12\x50\xd9\x98\x47\x12\x56\xa9\xfd\x2c\x8f\x60\xb9\x98\x08\x25\x16\x90\xb6\x35\xb9\x34\x1f\x93\xc0\x76\xe1\x65\x12\x5e\xe9\x45\xa6\x35\xd0\xdc\x7c\x85\x2d\x41\xba\xbc\xf4\x7b\xe6\x70\x12\xe0\xae\x5c\x4e\xc2\x2c\x19\xb1\xdb\x06\xe9\x47\xc1\xcd\x84\x63\x5c\x6a\x49\x61\x1f\x55\x14\x8e\x85\xad\x81\xe5\x5f\x22\x48\x26\x5b\x86\xf4\xa2\xe3\x3c\xcb\xf5\x82\x21\xf5\xbd\xac\x98\x56\x06\xe2\xf3\x05\x88\xbf\x7e\xfe\x6d\xed\x5f\x11\xf8\xfc\x2b\x13\xab\x34\xd9\xf1\xb4\xb5\xf2\xb9\x62\x6b\xeb\x14\x7b\x88\xb3\x6d\x03\x2c\x1e\x73\xdb\x86\x56\x78\xf9\x6e\x0d\x2c\x3b\x16\xb7\x5e\xbc\x80\xbd\xda\x8f\x6d\x53\x4e\x8d\x5a\x5d\xba\x8d\x3d\x9b\xa3\xcd\x2b\x07\x59\x3c\xbc\xbf\x0d\xed\x20\xcc\x5b\xe1\x8d\x07\x6b\x68\x47\xeb\xb3\x4f\xeb\x93\x73\x39\x73\x0d\xec\xe0\xad\xcf\xd1\xca\x94\x84\xcc\x1f\xa4\xc9\x02\xdc\xea\xaa\xa1\xef\xc6\x94\x1d\x3d\xb5\x1f\xc8\x56\xe6\x5c\x29\x5d\x03\x3b\x78\x5b\xb9\xf4\xd4\xd0\xd1\x51\x3b\x3a\x6a\x47\x47\xed\x60\x8d\xcf\xe7\x43\x32\x3e\xf9\xbf\x53\x4e\xd0\x7c\x80\x39\xc0\x5e\x6e\xe3\x4e\xa0\x8e\xb3\x2f\x03\xf5\x65\xe3\xe2\x82\x08\xa9\x52\x09\x7e\xd1\x6d\x21\xe4\xb7\xda\x5f\x98\xb4\x78\xa1\xe6\xf9\xc7\x95\x8b\xdc\x5c\x4d\xe6\xec\x71\xe5\x62\x15\x6c\x87\x95\x8b\xb5\x93\xb9\x4a\x36\xe5\x93\xef\x71\x31\xe3\xf9\x69\xdd\xa2\x5c\x56\x98\x1b\x67\x76\x97\xfb\x36\x57\x0f\xed\x3e\xb2\xd1\xa6\x73\xfd\xe9\x7d\x81\x4d\x9d\x8f\xf5\xa9\x2f\x0b\x52\x2c\xce\xb4\x95\xdd\x7e\xb9\x3d\xce\x1f\x74\xd2\x9f\x3e\xa1\xb6\x28\xdc\x97\x5e\xfe\xf8\x31\x3c\xc5\xa3\x6b\xf3\xac\x54\x92\x6b\x53\x48\x88\xf2\xfb\x35\x85\x96\xe6\xde\xed\xb9\x8b\xc4\x93\xb5\xdf\xd0\x34\xf4\xf1\x71\x53\xc7\x23\x5e\x9e\x6b\x4e\x96\x5c\x2b\x7a\xc3\xc9\x63\x25\x47\xff\xeb\x80\xfc\xaf\xe5\xd7\x3c\xba\x60\x5b\x30\x73\xb9\x60\x31\x27\x8f\x4e\x58\x4e\xc0\x57\x77\xc2\x96\xa2\x7e\xf4\xc3\xb6\x94\x3e\xfa\x61\x6b\xa5\x92\xfc\xb0\xa2\x72\x94\xdf\x15\x33\x76\x44\x7e\x83\x43\x63\x2f\xb7\x05\xbb\xec\x36\xe1\x7d\xed\xc0\xce\xc1\xc2\x97\xb8\xa4\xf0\xc5\x0f\xb2\x15\x3e\x64\xb5\xeb\x49\xb6\x2d\x33\x83\x97\x38\xc9\xa6\xab\xe1\xfe\x1c\x1d\xce\xa1\xb5\x22\xe7\xcd\xa2\xa4\x00\xca\x35\x1b\x22\xf7\x3e\x31\x49\xc0\xce\xbd\x49\x22\x2e\x7a\xc3\xea\x8e\x53\x98\xe7\xe4\xc5\x92\x0f\xa4\xa1\x08\x4a\x7d\x41\xc2\x41\x6a\x3a\x81\xf3\x1c\xe7\x4a\xd6\xdd\x3d\xd7\x27\xee\xfd\x9a\xa3\x17\xa0\x07\x32\x46\x02\x9f\xab\x23\x11\x2f\x70\xb7\xa3\x39\x45\x63\x7c\xf0\x27\x2b\x9e\x61\xac\x5c\x29\x3c\xa6\xb5\x90\xe1\x07\x42\x67\xbc\xc0\xa5\xc2\x07\x70\xe7\xdf\xc1\xdc\xbc\xba\x6a\x06\x46\x94\xcd\x11\xf3\x8e\x96\x60\xbf\x96\xe0\x22\x62\xeb\xbe\x8c\x41\x0c\x77\xb4\x07\xc9\xf6\x20\xc0\xdf\xc4\x7b\xb5\x05\x7b\xbf\x89\xb3\x98\x2d\x70\xe8\x78\xec\xe3\x55\x8b\xb0\x3c\x81\xb7\xf6\xe6\x15\x0c\xc3\xfb\x50\xec\x2e\x65\x18\xe2\x9b\x46\x8a\x69\xb7\x50\xfc\x5c\xd5\xee\x75\x4e\x1f\x95\x3b\x41\xb9\x1f\x08\x9e\xd7\x24\x9f\xde\x99\x7a\x23\xf7\x3e\x8e\xbd\xe2\x20\x7b\x14\x78\x3d\x47\xe1\x1d\x4f\xf4\xb6\xcc\x98\xf3\x4f\xf4\x76\xbf\xf0\xb6\xc8\xed\xaf\x07\x90\xcd\x6b\xed\xe5\x5a\xe0\x57\x05\x8a\x86\x2b\x13\xd9\x4d\xeb\x71\x85\x91\x87\xd9\xfa\x64\xb7\xb0\xc5\x28\x63\x21\xf2\x07\xb5\xd2\x73\xb7\x6d\xae\x88\xd0\xf9\xc0\xf5\x29\xc7\x83\x61\x3c\xa8\xa5\x36\x39\xc7\x85\xc1\x9b\x03\x67\x74\xb5\xf9\x96\x61\xb3\x94\xb1\x2d\x39\x4c\xee\x36\x3c\x16\x1e\x16\xa3\x74\x3e\xa9\x70\x19\x03\xe1\x2a\xe7\xb6\x0e\x83\x79\xa3\x34\x69\xc3\xde\xdb\x44\x68\xd2\x87\xb7\x22\xe9\x71\x76\xb8\x61\xbd\xd4\x8d\xd8\x5d\x1c\xcc\x0e\x4e\x8c\x15\xc9\x80\x06\x03\x35\x57\x2a\x78\xa9\xf6\x8b\xeb\x80\xd8\xba\x85\x73\xd3\xd6\xab\x3c\xa7\x51\x12\x45\xc9\xed\x54\xc2\xef\x4c\xea\x69\x88\x83\xda\x14\x07\xb3\x97\x95\xfa\xbc\x23\x7b\x3e\x67\xad\xf0\x0c\x6e\x87\x91\x3a\x23\xed\xe5\x90\xce\x44\x9b\x20\x9f\x8e\xe3\x84\x97\x2b\x0f\x62\xac\x82\x1f\x6e\x53\x53\x38\xf9\xd7\x96\x0c\x5b\x1b\x07\x2a\xa8\x87\x52\x3c\x9d\x0d\x35\x5a\x84\x78\x30\x21\x81\xd0\x9a\x9e\x6a\x72\x26\x81\xba\x85\x0d\x07\x62\x30\xa2\x4c\x25\x7f\x8d\x76\xd2\x64\xd1\x85\x8c\x8e\x19\x9a\xc6\x32\x97\xec\x27\x6c\x68\x46\x94\x9a\x59\x6b\x9e\xd4\x3f\xd6\x33\xf3\x6f\x3e\x66\x47\x4e\x34\x07\x4f\xb9\xe5\xff\xef\x7f\x37\xd2\x27\x67\x43\x4f\xa7\x2a\xeb\x68\x62\xd6\xda\x8c\x5c\xce\x59\xe0\x71\x7a\xe9\x2d\xfe\x14\xcc\x38\xe6\x2a\xb5\xf9\x1f\x5d\x59\x05\xfc\x34\x11\x22\xfc\xbd\xd1\x98\xcf\xe7\x75\xec\x31\x6f\x5c\xa7\x6c\xdc\x98\x93\x7b\xd2\x20\x81\x87\xbf\xd5\xc3\x49\xd8\x88\xca\xd6\x8c\xb6\xd9\x72\x06\xed\xc7\x96\x0d\xae\x19\x95\x22\xfc\x41\x65\x60\x57\x1b\xc2\x3c\xe2\xe6\x83\xfc\xa2\x5b\x7f\x98\x6d\xb3\xf5\x84\xb1\xda\x63\xe2\x63\x5e\x07\x67\x22\x39\x11\xe5\xcb\x47\x0c\xab\x66\x3f\xf6\x38\xce\xd0\x6e\xf8\xd8\x15\x8c\x06\xc4\x85\xa7\x86\x81\x8d\x23\xcf\x43\x35\xac\x8d\x1f\xb0\x4f\x43\xc9\x76\xb8\x64\x74\x16\xa6\xb4\xf0\x43\x94\xcc\x5e\xd6\x34\xe3\x2a\x53\x3c\xb8\x34\x18\x51\x36\x45\x81\x1b\xe5\xe1\x57\x55\x2a\x8c\x7f\xe7\x10\x73\x3b\x05\x4d\xfd\xd5\x50\x65\x5c\x5c\x9f\x88\xa9\xff\xa1\x5e\xa9\xc4\x4b\xb5\xc0\x71\x20\xe4\x0b\xf0\x90\x40\xe0\xd2\x29\xe6\x30\x62\x71\xc2\x7c\x07\x09\x8a\x87\x48\xf6\x55\x59\x08\x55\x01\xff\xbd\xd1\x10\xd1\x0b\x89\x1f\xf1\x9c\x3c\xb6\xc2\x83\x59\xe0\x61\xa6\xe8\x5b\xad\xda\xf9\x1d\x7c\xaa\x9f\xc0\x85\xbd\xde\x4a\x09\xe2\x32\x8c\x04\x79\xc0\x52\x12\x69\xc0\x55\x63\xe3\x42\xbc\x31\x5c\x34\x3e\xd5\x4f\x1a\x23\xd6\xf0\x30\xf6\xea\x38\x18\x5c\x9e\xcb\x76\xab\x8f\x0b\x5c\x30\x7a\x8f\x81\x32\x59\x53\x52\xcb\x55\xb1\xaf\x97\x9b\x2d\x1f\x13\x31\x99\x0d\xeb\x2e\x9d\x36\xe2\x32\x0d\xb5\x2f\xf1\x61\xfc\xa1\xba\x92\xd0\xff\xc6\x67\xc4\x9d\x80\x1e\x62\xbf\x9a\xd5\xc1\x5a\x5f\x87\xcf\xf5\x93\x8d\xcf\x90\xd1\xbf\x1a\x47\x8d\xcf\xf5\x93\x86\xec\x55\xac\x13\x44\x70\xec\x8f\x52\xea\xea\x9a\xce\xf2\x71\x15\x10\x87\x11\xf5\x7d\x3a\xe7\xbf\x57\x2a\xad\xd4\x1c\xea\x95\xca\x35\x66\x53\xc2\xa5\xc9\x91\xb0\x13\xcc\xf0\x70\x01\x63\x86\x02\x81\xbd\x2a\x8c\x18\xc6\x52\x80\xdd\x09\x62\x63\x5c\x05\x41\x01\x05\x0b\x08\x31\xe3\x34\x00\x3a\x14\x88\x04\x24\x18\x03\x52\xac\x89\x44\x9d\x70\xe0\x74\x24\xe6\x52\x3c\x95\x98\x72\x4e\x5d\x82\x04\xf6\xc0\xa3\xee\x6c\xba\xbc\xfe\x26\xd6\x97\x9f\x64\xdb\xb5\x7e\x4c\xa1\x7d\x50\x95\x78\x18\xf9\x52\xac\xe5\xbb\xe5\x2b\x25\xd7\x74\x26\x80\x61\x2e\x58\xa4\x42\x55\x20\x81\xeb\xcf\x3c\xd9\x86\xe5\x6b\x9f\x4c\x49\x5c\x83\x24\x57\x1d\xe7\x12\x74\x26\x19\x23\xdb\x59\x85\x29\xf5\xc8\x48\xfe\x8f\x55\xb7\xc2\xd9\xd0\x27\x7c\x52\x05\x8f\xf0\x78\x03\x4a\x15\xb8\x7c\xb8\x64\x67\xe0\x35\x28\x03\x8e\x7d\x5f\x22\x10\xcc\x97\x6a\xbd\x6c\x5d\x24\x05\x82\x4a\xde\x4c\x89\x88\x59\xa4\xea\x9d\x4f\x62\xa1\x7b\xec\x09\xe1\x30\x9a\xb1\x80\xf0\x09\x56\x34\x1e\x05\x4e\x55\x8d\x4a\x18\x05\x55\xc5\xa3\x0f\x28\xbb\xe6\xd2\xc0\x53\x43\xbd\xfc\x9a\xce\x04\x03\x1a\xd2\x07\xbc\x22\x8e\x01\x15\xc4\x8d\xd8\xad\x3e\x40\xf8\xf4\x55\xe3\x57\x7c\x82\x7c\x1f\x86\x38\x66\x58\x64\x35\xd0\x4a\x77\x98\xac\x9e\x0b\x14\x08\x82\x7c\x08\x29\x53\xf5\x3d\xef\x66\xbd\x52\x71\xae\x0c\xe8\xf7\x2e\x9c\x5b\xdd\x36\xc0\xec\xc3\xb5\xdd\xfb\x6a\xb6\x8d\x36\x68\x7a\x1f\xcc\xbe\x56\x85\x5b\xd3\xb9\xea\xdd\x38\x70\xab\xdb\xb6\x6e\x39\x77\xd0\xbb\x00\xdd\xba\x83\x2f\xa6\xd5\xae\x82\xf1\x4f\x95\xa6\x1a\x7a\x36\x98\xdd\xeb\x8e\x69\xb4\xab\x60\x5a\xad\xce\x4d\xdb\xb4\x2e\xe1\xfc\xc6\x01\xab\xe7\x40\xc7\xec\x9a\x8e\xd1\x06\xa7\x07\xb2\xc2\x18\xca\x34\xfa\x12\xac\x6b\xd8\xad\x2b\xdd\x72\xf4\x73\xb3\x63\x3a\x77\x55\xb8\x30\x1d\x4b\x62\x5e\xf4\x6c\xd0\xe1\x5a\xb7\x1d\xb3\x75\xd3\xd1\x6d\xb8\xbe\xb1\xaf\x7b\x7d\x03\x74\xab\x0d\x56\xcf\x32\xad\x0b\xdb\xb4\x2e\x8d\xae\x61\x39\x75\x30\x2d\xb0\x7a\x60\x7c\x35\x2c\x07\xfa\x57\x7a\xa7\xa3\xaa\xd2\x6f\x9c\xab\x9e\xad\xda\xd7\xea\x5d\xdf\xd9\xe6\xe5\x95\x03\x57\xbd\x4e\xdb\xb0\xfb\x70\x6e\x40\xc7\xd4\xcf\x3b\x46\x54\x95\x75\x07\xad\x8e\x6e\x76\xab\xd0\xd6\xbb\xfa\xa5\xa1\xa8\x7a\xce\x95\x61\xab\x62\x71\xeb\x6e\xaf\x0c\xf5\xc8\xb4\x40\xb7\x40\x6f\x39\x66\xcf\x92\xdd\x68\xf5\x2c\xc7\xd6\x5b\x4e\x15\x9c\x9e\xed\x3c\x92\xde\x9a\x7d\xa3\x0a\xba\x6d\xf6\x25\x43\x2e\xec\x5e\xb7\x0a\x92\x9d\xbd\x0b\xc5\x33\x4b\xd2\x59\x46\x84\x22\x59\x0d\x6b\x5f\xa4\x67\xab\xdf\x37\x7d\xe3\xa9\x2d\x6d\x43\xef\x98\xd6\x65\x5f\x12\xaf\x16\xae\x57\xb2\x06\x6a\x34\x13\x13\xca\xb8\xd6\x5c\x31\x1a\xf0\x17\x5f\xfc\x8d\xa0\x20\x64\x64\x8a\x4f\x7e\x3e\xf9\xed\x1f\xe3\x29\x22\xbe\xb4\x99\x7f\x19\x8b\xbf\x65\x8e\xfd\x74\x4c\x57\x13\xb4\x12\x39\x67\xa8\x29\x71\x0d\x32\x5d\xb1\x39\x43\xe1\x60\xe9\x3d\xe4\xf2\xf6\xe2\xc2\xb1\x7b\xed\xce\xb8\xa0\xd3\x0d\x9a\xb5\xe8\x80\x87\x7d\x2c\xf0\x46\x1a\xd5\x09\xf1\xf0\x2d\xf1\xc6\x58\xe4\x48\x4b\x9e\x82\x41\x82\x09\x19\x12\x61\xa9\x09\x5c\x26\x08\xc3\x3c\xa4\xca\x4d\xca\xdd\x88\x28\xbc\x46\x02\x81\x59\x80\xfc\x9a\xfa\x79\xa6\x3d\x0c\x57\x2e\x53\x2b\x9a\xe6\xbc\x4c\xb4\x2c\xf7\x2d\x67\x1b\x21\xb2\x10\xb9\x24\x18\xa7\x04\x1f\x53\xba\x87\xa2\x0d\xb0\x88\x61\xa4\x6d\x8f\x28\x44\xd1\x84\xec\x4c\x5b\x65\x93\x66\xf9\x68\x41\x67\x62\xa0\xae\x77\xdf\x3e\x97\x4b\x9e\x50\xa7\xdf\x3e\x5e\x64\xcb\x50\x21\x94\x37\x49\xc0\x56\x88\xe4\xa5\xd2\xe1\x25\xb3\x69\x6f\xb1\xec\x4d\xf8\xdc\xf3\xeb\x84\x43\x1c\x71\x1e\x8d\xb5\x23\x1c\xbb\xce\xb1\x33\x37\x6a\xa6\x2d\x33\xee\x30\xf9\x8e\x03\x5f\x03\x95\x99\x5f\x6b\xfe\xb2\x79\x8b\x78\x1a\x45\x74\x01\x79\x2e\x92\xdc\x13\xf6\x83\xb1\xfb\xeb\x32\x97\x75\xba\xe7\x65\xd6\x42\xf2\x92\x14\x39\x85\xb3\xd1\xbe\x1d\x68\xd7\x0e\x94\x90\x8d\x00\x46\x8a\x96\xe7\x3d\x67\xb3\xef\x98\x72\x21\x13\x97\xfb\xac\x4c\xde\x40\x6c\xf2\xed\xa9\x07\x11\x86\x2d\x7c\x03\x6a\xaa\x8f\xf0\x71\xeb\xbd\x29\x45\xf6\xa0\xac\x66\x2d\x5a\xb3\xb7\xcb\x30\xd7\xb6\xd3\x25\x2f\xb5\x07\xa5\xd4\xe6\xb4\x82\x17\xcb\xa4\x90\xe7\xbb\x6d\x3d\xc9\x39\x2f\xd7\xeb\xdc\xb7\xcd\xe4\x38\xa7\xb2\x4b\xf2\xb3\xac\x13\x28\xc7\xdc\xfb\x69\xae\x28\xec\x4b\xe3\x8c\x60\xec\x13\x3e\x39\x2a\x5c\x0e\xe2\x77\xa2\x70\x79\xaf\x90\xfb\x81\xb4\xef\x8d\xf7\x5c\x6e\x39\x2d\x1e\xab\x61\xae\x33\xe3\x87\xb4\xfb\xb2\xec\xd9\xf0\x1c\x1e\x2a\xf2\xe7\x68\x91\xbd\xd7\xb2\xe0\xc6\xc8\x1c\xe7\xbd\x0f\x72\x6f\x64\xa9\x73\xdd\xa5\x52\x49\x26\x9c\xe3\x5e\x4e\x83\x29\xf3\xf2\x1c\xe9\xde\x99\x81\xfb\x62\x62\x22\x23\x77\x38\xba\x5d\xe8\xc8\xf6\x0a\xd3\xca\x1c\xdb\xce\x3e\x6f\xfa\xfa\xe9\xf0\xca\x1a\xfc\x32\x96\x65\x1f\xf6\x3e\xe3\xb0\xe5\xbe\xb6\xd1\x96\xd9\x8b\xf5\xe6\x11\x2e\xb5\xbe\xfa\xba\xf1\xad\x68\x95\xf8\x18\xdd\x3a\xc8\xe8\xd6\x86\x50\xbc\xdf\xe8\xd7\x31\x1c\xf5\x1d\x86\xa3\xca\xcd\x72\x57\x05\xba\x35\x41\x0c\xb9\x02\xb3\x77\x33\xcb\xfd\x73\xc6\x05\x19\x2d\xf2\xe6\x02\xdc\x7d\xd6\xf8\xa9\xfe\xd7\x5f\x8f\x61\x9a\x37\x0f\xd3\x24\x99\xe6\x68\x73\x55\x8f\x79\x98\xbd\xbb\x59\x62\x91\xf5\x87\x7c\x3c\x4b\xe6\xdb\x71\x72\x97\xc1\xa0\xf5\x0b\x52\x97\x03\xfd\x93\x64\xbd\xe7\x89\x5d\xf1\xbc\xa9\x49\x28\x25\xaf\x88\xdf\x29\xc0\x98\x01\x52\x2c\x3d\x47\x0a\x48\xa1\x3c\xaa\x49\x38\x8f\xeb\x3f\xf9\x11\xf2\x5d\xd0\x94\x2f\xf7\x3b\x64\x4f\x78\xe1\x3b\x9b\x35\xff\xa8\x61\xd2\x14\xf7\xad\x3f\x1b\xaa\xa9\xe5\xf7\xe9\xbd\x7d\x47\xe2\xb3\xf7\xa8\x4b\xf1\xe4\xfa\x1b\xc2\x63\x63\xe4\x91\x60\xdc\xc5\x28\x20\xc1\x98\xbf\x07\xf1\x79\xcb\x25\xae\x72\x69\xfb\x4b\x8f\x18\x19\x7e\x5e\xf6\x08\xf1\x5d\xdb\x65\xe4\x79\x39\xd9\x98\xaa\x92\x19\x69\x44\x5e\x5a\x25\x0d\xc5\xb9\x54\xf7\xf2\x4d\xa7\x2a\x05\xa7\x18\x29\x83\x53\x9b\xb8\xc2\xc6\xa3\xcc\x34\x4a\x07\x39\xfd\x28\xe1\xf3\xee\xec\xef\x6e\x28\x97\xef\x93\x90\x93\x7f\x61\xad\x39\x25\x9e\xe7\x97\xea\x48\x81\xf4\x49\xa5\xfd\xbc\x67\xf1\x79\x7f\xeb\x07\x2f\x7e\x61\xee\x41\x0a\x48\xfa\x05\xb8\x2b\x87\xea\x18\x1e\x61\x86\x03\x37\xcf\x45\xa3\x47\x2f\x5b\x6b\xfe\xf5\x68\x93\x5f\xd6\x26\xff\xd7\x0c\xb3\x45\x8b\x7a\xf8\x68\x95\x8f\x56\x79\xad\xe8\xf7\x6e\x95\x95\xe4\x83\x2b\x45\xff\x68\x8b\xd3\x29\x9f\x6c\x71\x86\x72\x7c\xd7\x1b\x05\x4e\x1b\xea\x64\xd7\x08\xb9\xb8\x59\xf9\xff\x00\x00\x00\xff\xff\x10\x55\x2d\xcd\x7a\xbf\x00\x00")

func dataGjishoGladeBytes() ([]byte, error) {
	return bindataRead(
		_dataGjishoGlade,
		"data/gjisho.glade",
	)
}

func dataGjishoGlade() (*asset, error) {
	bytes, err := dataGjishoGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/gjisho.glade", size: 49018, mode: os.FileMode(436), modTime: time.Unix(1593829520, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/gjisho.glade": dataGjishoGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"gjisho.glade": &bintree{dataGjishoGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

